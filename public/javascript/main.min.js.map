{"version":3,"sources":["cards.js","loading.js","navigations.js","paralax.js","slider.js","test.js","tourPageSlider.js"],"names":["loadingScreen","document","querySelector","hamburger","menu","navigation","classList","toggle","window","addEventListener","animatedElement","querySelectorAll","animPos","getAttribute","pageYOffset","i","add","remove","windowsCenter","innerHeight","offset","yPost","elementRect","distFromElementCenter","elementCenter","animatePralax","parallaxElement","forEach","elem","dataset","rate","getBoundingClientRect","top","height","Y","style","transform","concat","slider","sliderDisplay","sliderImages","sliderThumbnailImages","sliderThumbnailImage","sliderBtnPrev","Urls","push","backgroundImage","slice","replace","imageShowcase","createElement","appendChild","urlGiver","resizeImages","sliderImagesArray","width","offsetWidth","_loop","length","sliderBtnnext","el","element","slided","a","b","tourHero","showcaseImagesArray","firstelemUrl","showcaseImageUrl","filter","otherImages"],"mappings":"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","file":"main.min.js","sourcesContent":["// let card = document.querySelector('.card-small');\r\n\r\n// let cardImage = document.querySelectorAll('.card-small__image');\r\n// let cardText = document.querySelectorAll('.card-small__text');\r\n\r\n// let visitBtn = document.querySelector('.card-small__text__button');\r\n// let visitBtnHidden = document.querySelectorAll('.card-small__text__overlay-button');\r\n\r\n// let toggled = false; \r\n \r\n// for(let i = 0; i < cardImage.length; i++ ){\r\n// \tcardImage[i].addEventListener('click',  () =>{\r\n// \t\t// if(!toggled){\r\n// \t\t\tcardText[i].classList.toggle('js-text-disappear');\r\n// \t\t\tvisitBtnHidden[i].classList.add('js-active-button');\r\n// \t\tconsole.log(visitBtnHidden[i].classList);\r\n// \t\t\tcardImage[i].style.transform ='scale(2.07)';\r\n\t\t\t\r\n\t\t\t\r\n// \t\t\tconst otherCardImagesArray = [...cardImage];\r\n// \t\t\tconst otherCardImages = otherCardImagesArray.filter(img => img != otherCardImagesArray[i]);\r\n// \t\t\tconsole.log(otherCardImages);\r\n\t\t\t\r\n// \t\t\tfor(let j = 0; j < otherCardImages.length; j++ ){\r\n// \t\t\t\tconsole.log(otherCardImages[j]);\r\n// \t\t\t\totherCardImages[j].style.transform ='scale(1)'; \r\n// \t\t\t\totherCardImages[j].nextElementSibling.classList.remove('js-text-disappear');\r\n// \t\t\t\totherCardImages[j].previousElementSibling.classList.remove('js-active-button');\r\n// \t\t\t\t// visitBtnHidden[i].classList.toggle('js-active-button');\r\n// \t\t\t}\r\n\t\t\r\n\r\n\t\t\t\r\n\t\t\t\r\n// \t\t\t// toggled = false;\r\n// // \t\t}else{\r\n// // \t\t\totherCardImages[j].nextElementSibling.classList.remove('js-text-disappear');\r\n// // \t\t\tconsole.log(\"here\");\r\n// // \t\t\t// otherCardImages[j].previousElementSibling.classList.toggle('js-active-button');\r\n// // \t\t\tvisitBtnHidden[i].classList.toggle('js-active-button');\r\n// // \t\t\tcardImage[i].style.transform ='scale(1)';\r\n// // \t\t\ttoggled = true;\r\n\t\t\t\r\n// // \t\t}\r\n// \t})\r\n// }\r\n\r\n// // document.body.addEventistener('click', () =>{\r\n// // \t\tfor(let i = 0; i < cardImage.length; i++ ){\r\n// // \t\t\t\tcardText[i].classList.toggle('js-text-disappear');\r\n// // \t\t\t\tvisitBtnHidden[i].classList.toggle('js-active-button');\r\n// // \t\t\t\tcardImage[i].style.transform ='scale(1)';\r\n// // \t\t\t\ttoggled = false;\r\n// // \t}\r\n// // })\r\n\r\n// // visitBtn.addEventListener('click', () =>{\r\n// // \tcardImage.removeEventListener('click',cardAnim());\r\n// // \tcard.style.overflow = \"initial\";\r\n// // \tcardImage.style.postions = \"fixed\";\r\n// // \tcardImage.style.width = \"100vw\";\r\n// // \tcardImage.style.height = \"20vh\";\r\n\t\r\n\t\r\n// // })\r\n \r\n\r\n\t\r\n","const loadingScreen = document.querySelector('.loading_screen')\r\n\r\n\r\n// document.addEventListener('DOMContentLoaded', () => {\r\n//     loadingScreen.style.display = 'none'\r\n// });\r\n\r\n// window.setInterval(() => {\r\n//     loadingScreen.style.display = 'none';\r\n// }, 3000);\r\n\r\n\r\n\r\n// document.addEventListener('readystatechange', event => {\r\n\r\n//     if (event.target.readyState === \"interactive\") {      //same as:  document.addEventListener(\"DOMContentLoaded\"...   // same as  jQuery.ready\r\n//         loadingScreen.style.display = 'block'\r\n    \r\n//     }\r\n\r\n//     if (event.target.readyState === \"complete\") {\r\n//         loadingScreen.style.display = 'none'\r\n//     }\r\n\r\n// });","//\r\n// ─── ELEMENTS ───────────────────────────────────────────────────────────────────\r\n//\r\n//DROP-DWON\r\nconst hamburger = document.querySelector('.ham');\r\nconst menu = document.querySelector('#menu-js');\r\n\r\n//NAVIGATION-CHANGE\r\nlet navigation = document.querySelector('.navigation');\r\n\r\n\r\n\r\n// \r\n// ─── DROPDOWN FUNCTIONS ─────────────────────────────────────────────────────────\r\n//\r\nhamburger.addEventListener('click', () => {\r\n    hamburger.classList.toggle('active');\r\n    menu.classList.toggle('droped');\r\n});\r\n\r\n//\r\n// ─── NAVIGATION CHANGE ON SCROLL ────────────────────────────────────────────────\r\n//\r\nwindow.addEventListener('scroll', (e) => {\r\n    const animatedElement = document.querySelectorAll('.scroll');\r\n\r\n    for (let i = 0; i < animatedElement.length; i++) {\r\n        //get the atributes\r\n        let animClass = animatedElement[i].getAttribute('anim-class');\r\n        let animPos = animatedElement[i].getAttribute('anim-pos');\r\n        \r\n        //get th windows position\r\n        let scrollDistance = window.pageYOffset;\r\n\r\n        //chenge class on scroll\r\n        if (scrollDistance > 500) {\r\n            navigation.classList.add(\"navigation-drop-shadow\");\r\n        }else{\r\n            navigation.classList.remove(\"navigation-drop-shadow\");            \r\n        }\r\n\r\n    }\r\n});\r\n\r\n","// const parallaxElement = document.querySelectorAll(\".scroll-paralax\");\r\n\r\n// window.addEventListener(\"scroll\", e => {\r\n//     for (let i = 0; i < parallaxElement.length; i++) {\r\n//         if (parallaxElement[0].getBoundingClientRect().top <= 1000) {\r\n//             let rate = parallaxElement[i].dataset.rate;\r\n//             var pos = window.pageYOffset * rate;\r\n//             parallaxElement[i].style.transform = \"translate3d(0px,\" + pos + \"px, 0px)\";\r\n//         }\r\n//     }\r\n// });\r\n\r\n// window.addEventListener(\"resize\", () => {\r\n//     if (window.innerWidth < 630) {\r\n//         parallaxElement.forEach(e => {\r\n//             e.dataset.rate = 0; \r\n//         });\r\n//     }\r\n// });\r\n\r\n\r\n\r\nconst parallaxElement = document.querySelectorAll('.parallaxElement')\r\n\r\n\r\nlet offset = 0.3;\r\nlet yPost = 0;\r\nlet windowsCenter = window.innerHeight / 2; \r\n\r\n// window.addEventListener('resize', () => {\r\n//     let windowsCenter = window.innerHeight / 2;\r\n//     let elementWidth = elem.getBoundingClientRect().width;\r\n//     let elementHeight = elem.getBoundingClientRect().height;\r\n// })\r\n\r\n\r\nwindow.addEventListener('scroll', () => {\r\n    window.requestAnimationFrame(animatePralax)\r\n});\r\n\r\n\r\n\r\nconst animatePralax = () => {\r\n    parallaxElement.forEach(elem => {\r\n        let offset = elem.dataset.rate;\r\n        let elementRect = elem.getBoundingClientRect();\r\n        let elementCenter = elementRect.top + (elementRect.height / 2);\r\n        let distFromElementCenter = elementCenter - windowsCenter;\r\n        let Y = yPost + (distFromElementCenter * offset)\r\n\r\n        elem.style.transform = `translate3d(0, ${Y}px, 0)`;\r\n\r\n        // console.log(`elementCenter is ${elementCenter}` + '\\n'\r\n        //     + `distFromElementCenter ${distFromElementCenter}` + '\\n'\r\n        //     + `Y ${Y}`);\r\n\r\n        // requestAnimationFrame(animatePralax)\r\n    })\r\n\r\n     \r\n\r\n};\r\n\r\n","//\r\n// ─── ELEMENTS ───────────────────────────────────────────────────────────────────\r\n//\r\nconst slider = document.querySelector(\".slider\");\r\nconst sliderDisplay = document.querySelector(\".slider__display\");\r\nconst sliderImages = document.querySelector(\".slider__display__image-container\");\r\n\r\n//thumbnail images array\r\nconst sliderThumbnailImages = document.querySelectorAll(\"#sliderThumbnailImages\");\r\nconst sliderThumbnailImage = document.querySelectorAll(\"#sliderThumbnailImages div\");\r\n\r\n//buttons\r\nconst sliderBtnPrev = document.querySelector(\"#sliderBtnPrev\");\r\nconst sliderBtnnext = document.querySelector(\"#sliderBtnnext\");\r\n\r\n//\r\n// ─── //!VERIABLES ──────────────────────────────────────────────────────────────────\r\n//\r\nlet slided = 0;\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nif (sliderImages) {\r\n\r\n\r\n    //? takes the urls in the thubnail <div> and gives the showcase <div>s AND creats the elements with urls\r\n    const urlGiver = () =>{\r\n        const Urls = [];\r\n\r\n        sliderThumbnailImage.forEach(elem => {\r\n            Urls.push(elem.style.backgroundImage.slice(4, -1).replace(/\"/g, \"\"));\r\n        });\r\n\r\n        for (let i = 0; i < Urls.length; i++) {\r\n            const imageShowcase = document.createElement('div');\r\n\r\n            imageShowcase.classList.add('slider__display__image-container__image');\r\n            imageShowcase.style.backgroundImage = `url(\"${Urls[i]}\")`;\r\n            sliderImages.appendChild(imageShowcase); \r\n        }\r\n\r\n    }\r\n\r\n    urlGiver();\r\n\r\n\r\n\r\n\r\n    \r\n    //? after creating the element we can get them all (becouse we gave them a classname)\r\n    const sliderImagesArray = document.querySelectorAll(\".slider__display__image-container__image\");\r\n\r\n    //?resizes the image <div> on each resize \r\n    const resizeImages = () => {\r\n        sliderImagesArray.forEach(elem => {\r\n            elem.style.width = `${slider.offsetWidth}px`;\r\n        });\r\n    };\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n        resizeImages();\r\n    });\r\n\r\n\r\n\r\n    //! helper function that gets the diferent array that doesnt contain the element(that is given in the second argument)\r\n    const differentEelements = (array, element) =>{\r\n            const others = [...array];\r\n            const notselected = others.filter(el => el != element);\r\n            return notselected;\r\n    }\r\n\r\n \r\n    //? adds the highlited class to the first thumnail image\r\n    sliderThumbnailImage[0].classList.add('highlighted-Thumbnail');\r\n    \r\n    //? transfroms the main showcase container div TRANSFORMX VALUE appropriatly \r\n    for (let i = 0; i < sliderThumbnailImage.length; i++) {\r\n        sliderThumbnailImage[i].addEventListener('click', () =>{\r\n            sliderImages.style.transform = `translateX(-${sliderImages.offsetWidth / sliderImagesArray.length * i}px`;\r\n            sliderThumbnailImage[i].classList.add('highlighted-Thumbnail');\r\n            slided = i;\r\n\r\n            differentEelements(sliderThumbnailImage, sliderThumbnailImage[i]).forEach(elem => {\r\n                elem.classList.remove('highlighted-Thumbnail');\r\n            });\r\n        })\r\n        \r\n    }\r\n \r\n\r\n    //? NEXT BUTTON event listener\r\n    sliderBtnnext.addEventListener(\"click\", () => {\r\n        if (slided == sliderImagesArray.length - 1) {\r\n            sliderImages.style.transform = \"translateX(-0px)\";\r\n            slided = 0;\r\n            sliderThumbnailImage[0].classList.add('highlighted-Thumbnail');\r\n            sliderThumbnailImage[sliderThumbnailImage.length-1].classList.remove('highlighted-Thumbnail');\r\n        } else {\r\n            slided += 1;\r\n            sliderThumbnailImage[slided].classList.add('highlighted-Thumbnail');\r\n            sliderThumbnailImage[slided-1].classList.remove('highlighted-Thumbnail');\r\n            sliderImages.style.transform = `translateX(-${sliderImages.offsetWidth / sliderImagesArray.length * slided}px`;\r\n        }\r\n    });\r\n\r\n\r\n    //? PREV BUTTON event listener\r\n    sliderBtnPrev.addEventListener(\"click\", () => {\r\n        if (slided == 0) {\r\n            sliderImages.style.transform = `translateX(0)px`;\r\n            slided = 0;\r\n        } else {\r\n            slided -= 1;\r\n            sliderThumbnailImage[slided].classList.add('highlighted-Thumbnail');\r\n            sliderThumbnailImage[slided+1].classList.remove('highlighted-Thumbnail');\r\n            sliderImages.style.transform = `translateX(-${sliderImages.offsetWidth / sliderImagesArray.length * slided}px`;\r\n        }\r\n    });\r\n}\r\n","let a = 10;   \r\nlet b = 200;  ","const tourHero = document.querySelector(\".tour_hero\");\r\nconst showcaseImagesArray = document.querySelectorAll(\".tour_hero__showcase-images__image\");\r\n\r\nif (tourHero) {\r\n    for (let i = 0; i < showcaseImagesArray.length; i++) {\r\n        const elem = showcaseImagesArray[i];\r\n        const firstelemUrl = showcaseImagesArray[0].style.backgroundImage.slice(4, -1).replace(/\"/g, \"\");\r\n        \r\n        \r\n        // showcaseImagesArray[0].style.border = \"8px solid black\";\r\n        tourHero.style.backgroundImage = `url(\"${firstelemUrl}\")`;\r\n\r\n        elem.addEventListener('click', () =>{\r\n            const showcaseImageUrl = elem.style.backgroundImage.slice(4, -1).replace(/\"/g, \"\");\r\n            const otherImages = [...showcaseImagesArray];\r\n            const notselectedImages = otherImages.filter(el => el != elem);\r\n            \r\n            notselectedImages.forEach(elem => {\r\n                elem.classList.remove('highlighted-Thumbnail');\r\n            });\r\n\r\n            \r\n            elem.classList.add('highlighted-Thumbnail');\r\n            tourHero.style.backgroundImage = `url(\"${showcaseImageUrl}\")`;\r\n        })        \r\n    }\r\n}"]}